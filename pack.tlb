bit$_ (## 1) = Bit;
bool_false$0 = Bool;
bool_true$1 = Bool;

hm_edge#_ {n:#} {X:Type} {l:#} {m:#} label:(HmLabel ~l n)
          {n = (~m) + l} node:(HashmapNode m X) = Hashmap n X;

hmn_leaf#_ {X:Type} value:X = HashmapNode 0 X;
hmn_fork#_ {n:#} {X:Type} left:^(Hashmap n X)
           right:^(Hashmap n X) = HashmapNode (n + 1) X;

hml_short$0 {m:#} {n:#} len:(Unary ~n) {n <= m} s:(n * Bit) = HmLabel ~n m;
hml_long$10 {m:#} n:(#<= m) s:(n * Bit) = HmLabel ~n m;
hml_same$11 {m:#} v:Bit n:(#<= m) = HmLabel ~n m;

unary_zero$0 = Unary ~0;
unary_succ$1 {n:#} x:(Unary ~n) = Unary ~(n + 1);

hme_empty$0 {n:#} {X:Type} = HashmapE n X;
hme_root$1 {n:#} {X:Type} root:^(Hashmap n X) = HashmapE n X;


nothing$0 {X:Type} = Maybe X;
just$1 {X:Type} value:X = Maybe X;

anycast_info$_ depth:(#<= 30) { depth >= 1 }
   rewrite_pfx:(bits depth) = Anycast;

addr_std$10 anycast:(Maybe Anycast)
   workchain_id:int8 address:bits256  = MsgAddressInt;
_ _:MsgAddressInt = MsgAddress;



dns_item#_ address:MsgAddress inited:Bool last_touch:uint48 = DNSItem;

storage#_ inited_count:uint8 domains:(HashmapE 8 DNSItem)
          owner:MsgAddress = Storage;

change_dns_record_req#5eb1f0f9 query_id:uint64 target_index:uint8
                               key:uint256 value:(Maybe ^Cell)
                               = InternalMsgBody;

unpack#855965fc query_id:uint64 target_index:uint8 = InternalMsgBody;

unpack_all#39e2f30b  query_id:uint64 = InternalMsgBody;

add_domain#3b45b2d6 query_id:uint64 item_address:MsgAddress = InternalMsgBody;

touch#11111111 query_id:uint64 target_index:uint8 allow_min_reward:Bool = InternalMsgBody;
